version: '3'

services:
  test-backend.test.local:
    container_name: test-backend
    build:
      context: .
    volumes:
      - .:/test-backend/usr/src/app
      - /test-backend/usr/src/app/node_modules
    ports:
      - ${PORT}:${PORT}
    command: npm run start:prod
    env_file:
      - .env
    networks:
      - webnet
#    healthcheck:
#      test: [ "CMD", "curl", "http://test-backend.test.local:5010/.well-known/apollo/server-health" ]
#      interval: 30s
#      timeout: 10s
#      retries: 5
    restart: "on-failure"
    depends_on:
      - devredis-server.test.local
      - devdbserver.test.local
  devredis-server.test.local:
    image: redis
    container_name: test-redis-server
    command: redis-server --requirepass ${REDIS_PASSWORD}
    #command: redis-server
    ports:
      - 6379:${REDIS_PORT}
    volumes:
      - /mnt/xvdb/redis/:/usr/local/etc/redis/
    env_file:
      - .env
    networks:
      - webnet
  devdbserver.test.local:
    container_name: test-database
    image: postgres
    env_file:
      - .env
    networks:
      - webnet
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER_NAME}
      POSTGRES_DB: ${POSTGRES_DATABASE}
      PG_DATA: /var/lib/postgresql/test_data
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/test_data
networks:
  webnet:
volumes:
  pgdata:
